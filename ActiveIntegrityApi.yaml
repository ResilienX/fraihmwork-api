openapi: 3.0.1

info:
  title: Active integrity data API
  description: 'API to retrieve the latest processed component and fault data from FRAIHMWORK'
  contact:
    email: g.dorchies@resilienx.com
  version: 0.0.2
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: http://<server>.fraihmwork.resilienx/api/active/v0/
tags:
- name: Component Data Retrieval
  description: Functions for getting all component statuses or just a single one
- name: Fault Data Retrieval
  description: Functions for getting all faults, faults by source & code, by source, code & severity, and by ID.

paths:
  /components:
    get:
      tags:
      - Component Data Retrieval
      summary: findAllComponents
      operationId: findAllComponents
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActiveComponent'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      deprecated: false
      security:
      - SystemRead:
        - fraihmwork.system.read
  /components/{uuid}:
    get:
      tags:
      - Component Data Retrieval
      summary: findComponentByUuid
      operationId: findComponentByUuid
      parameters:
      - name: uuid
        in: path
        description: uuid
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ActiveComponent'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      deprecated: false
      security:
      - SystemRead:
        - fraihmwork.system.read
  /faults:
    get:
      tags:
        - Fault Data Retrieval
      summary: findAllFaults
      operationId: findAllFaults
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActiveFault'
        401:
          description: Unauthorized
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        404:
          description: Not Found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      deprecated: false
      security:
      - SystemRead:
        - fraihmwork.system.read
  /faults/search/findFaultsBySourceAndCode:
    get:
      tags:
        - Fault Data Retrieval
      summary: findFaultsBySourceAndCode
      operationId: findFaultsBySourceAndCode
      parameters:
        - name: source
          in: query
          description: source
          schema:
            type: string
            format: uuid      
        - name: code
          in: query
          description: code
          schema:
            type: string

      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActiveFault'
        401:
          description: Unauthorized
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        404:
          description: Not Found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      deprecated: false
      security:
      - SystemRead:
        - fraihmwork.system.read
  '/faults/{uuid}':
    get:
      tags:
        - Fault Data Retrieval
      summary: findFaultByUuid
      operationId: findFaultByUuid
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ActiveFault'
        401:
          description: Unauthorized
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        404:
          description: Not Found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      deprecated: false      
      security:
      - SystemRead:
        - fraihmwork.system.read
components:
  schemas:
    Response:
      type: object
      properties:
        itemId:
          type: string
          format: uuid
        message:
          type: string
          description: The message provided back to the client
      required:
        - message
    ActiveComponent:
      type: object
      properties:
        componentLibraryName:
          type: string
          
        configurationVersion:
          type: string
          
        description:
          type: string
          
        firmwareVersion:
          type: string
          
        hardwareVersion:
          type: string
          
        ipAddress:
          type: string
          
        location:
          type: string
          
        manufacturer:
          type: string
          
        model:
          type: string
          
        name:
          type: string
          
        rawComponentType:
          type: string
          enum:
          - SERVICE
          - NETWORK_DEVICE
          
        softwareVersion:
          type: string
          
        startupTime:
          type: string
          format: date-time
          
        timeOfRegistration:
          description: Time of first registration in the FRAIHMWORK system. The moment that we are first aware of the system. 
          type: string
          format: date-time
          
        timeOfPerformance:
          description: Defaults to TIME OF REGISTRATION unless there has been a reset from an administrator to start tracking a different period of time 
          type: string
          format: date-time
          
        timeOfReplacement:
          description: Defaults to TIME OF REGISTRATION unless there has been a reset from an administrator to start tracking a different period of time. Tracks the last time that a system was repaired, replaced, or any other maintenance has been performed, thus requiring a reset in the lifetime statistics below / MTBF time.  
          type: string
          format: date-time
          
        sessionRunningTimeSeconds:
          description: If ONLINE, this is the amount of time (ms) passed between when the system started being ONLINE to the present. Otherwise 0. Function of (NOW - System Startup)
          type: integer
          format: int64
        
        totalRunningTimeSeconds:
          description: This is the amount of time that the system has been ONLINE since it has been registered with FRAIHMWORK. Could be seen as the sum of all SESSION RUNNING TIMEs since the TIME OF REGISTRATION. Used for tracking time used to measure MTBF 
          type: integer
          format: int64
          
        registrationLifetimeSeconds:
          description: Total time passed since TIME OF REGISTRATION. Total amount of time that the FRAIHMWORK CORE has been aware of this system. Function is (NOW - TIME OF REGISTRATION)
          type: integer
          format: int64

        totalUptime:
          description: A percentage which is a function of TOTAL RUNNING TIME / REGISTRATION LIFETIME
          type: number
          format: double
          
        totalPerformanceRunningTimeSeconds:
          description: This is the amount of time that the system has been ONLINE since the TIME OF PERFORMANCE. Could be seen as a sum of all SESSION LIFETIMEs since the TIME OF PERFORMANCE. Used for tracking data over a specific period of time.
          type: integer
          format: int64

        performanceLifetimeSeconds:
          description: Total time passed since TIME OF PERFORMANCE . Total amount of time that the FRAIHMWORK CORE has been aware of this system since a manual reset. Function is (NOW - TIME OF PERFORMANCE)
          type: integer
          format: int64

        performanceUptime:
          description: A percentage which is a function of (TOTAL PERFORMANCE RUNNING TIME) / (PERFORMANCE LIFETIME).
          type: number
          format: double
          
        totalReplacementRunningTimeSeconds:
          description: This is the amount of time that the system has been ONLINE since the TIME OF REPLACEMENT. Could be seen as a sum of all SESSION LIFETIMEs since the TIME OF REPLACEMENT. Used for tracking data over a specific period of time.
          type: integer
          format: int64

        replacementLifetimeSeconds:
          description: Total time passed since TIME OF REPLACEMENT. Total amount of time that the FRAIHMWORK CORE has been aware of this system since a component replacement. Function is (NOW - TIME OF REPLACEMENT)
          type: integer
          format: int64

        replacementUptime:
          description: A percentage which is a function of (TOTAL REPLACEMENT RUNNING TIME) / (REPLACEMENT LIFETIME).
          type: number
          format: double

        availability:
          description: Same as TOTAL UPTIME % for now. Will update definition as we gain ability to inject modules for handling different types of components (like using additional properties defined for radars)
          type: number
          format: double

        parent:
          type: string
          format: uuid

        state:
          type: string
          enum:
          - UNAVAILABLE
          - OFFLINE
          - STARTINGUP
          - ONLINE
          - FAULTED
        stateDescription:
          type: string
          description: An optional detailed description of the system state in order to provide
            more context. This field can be left blank if the enum fully describes
            the system state with no additional qualifications.

        uuid:
          type: string
          format: uuid
          
        extensions:
          description: The addition for any component extensions that are optionally included to provide stereotyped information for a particular component. 
          type: object
          additionalProperties: true
    
    ActiveFault:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        id:
          type: string
          format: uuid
        name:
          type: string
        severityLabel:
          type: string
          enum:
            - LOW
            - MEDIUM
            - HIGH
            - UNKNOWN
        source:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
        extensions:
          description: The addition for any fault extensions that are optionally included to provide stereotyped information for a particular fault. 
          type: object
          additionalProperties: true
  securitySchemes:
    SystemRead:      
      flows:
        clientCredentials:
          tokenUrl: https://well-known/oauth-authorization-server/token
          refreshUrl: https://well-known/oauth-authorization-server/refresh
          scopes:
            fraihmwork.system.read: Client may query for any system, version or state data that the service can provide
      type: oauth2