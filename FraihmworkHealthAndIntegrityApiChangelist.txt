Version 1.6.1
- Added GET /monitor/v1/component/{uuid}/queryRelationship: to allow querying associated components to a given one by its relationships

Version 1.6.0
- Added RelationshipDefinition and RelationshipInstance data types
- Added POST, GET, and DELETE endpoints for RelationshipDefinitions
- Added POST, GET, and DELETE endpoints for RelationshipInstances
- Removed useless deprecated: false declarations
- All 401's are described as 'not authenticated' 
- Scrubbed to ensure 406 and 500 codes applied universally

Version 1.5.1
- Added empty object and nullable attributes in a handful of places to support openapitools-generator code generation

Version 1.5.0
- Added minimumTimeToLive field to Fault object, to allow for a specification of a minimum amount of time a fault is forced to exist in FRAIHMWORK
- Added 202 return code to the fault delete operation, for when a delete is requested during a minimum time to live period. This will notify a client that the fault *will* be removed when the time period expires, but no action has been taken yet.
- Added missing 400 return code for fault post operation. This is already performed by the FRAIHMWORK system, but was not documented in swagger spec.

Version 1.4.0
- Added POST /monitor/v1/component/schedule/unavailability: Add unavailability schedules for one or more components.
- Added GET /monitor/v1/component/schedule/unavailability: Retrieve unavailability schedules.
- Added POST /monitor/v1/component/schedule/unavailability/remove: Remove unavailability schedules by component, day, or time period.
- Added new RecurringSchedule schema: Includes componentId and an array of schedules, with days (e.g., Monday, Tuesday, All) and periods defining start and end for unavailability.
- Updated descriptions around time statistics and component states to further clarify role of UNAVAILABLE states and fault overrides

Version 1.3.0
- Moved Blocklister API elements to FraihmworkHealthAndIntegrityApi
- Moved Mitigator API elements to FraihmworkHealthAndIntegrityApi
- Added endpoints for resetting the timeOfPerformance and timeOfReplacement, previously only available in an internal api specification
- Updated security scopes to follow convention in destination spec
- Updated blocklister scopes to match read/write/admin pattern
- Removed subscription elements from Blocklister API elements
- Removed subscription elements from Mitigator API elements
- Set the base path to just /api and prefixed all normal paths with /monitor/v1 or /mitigate/v1 paths. This results in the same paths as before for all component and fault endpoints

Version 1.2.1
- Clarified scope descriptions
- Added note in API request descriptions on write scopes impacting authorization on components/faults
- Updated descriptions for 403 errors

Version 1.2.0
- Added comments to oauth security schemes section to indicate possibility of multiple authorization servers
- Update oauth security scheme to be formatted as per swagger best practices, instead of by scope
- Added fraihmwork.component.admin and fraihmwork.fault.admin scopes to indicate updated usage
- Filled in missing 401 and 403 errors for requests that did not have them. Also added some descriptions for 403s

Version 1.1.0
- Added fault counters within component statistics data type.

Version 1.0.0:
- Merged registration API elements into this api spec for simplicity and to remove redundant items
- Merged 'Active' fault and component apis into this one for simplicity
- All major activities are under /component and /fault to have consistent naming. /system is deprecated, but performs similar functions (and still returns a 'registration' type)
- Updated additional properties to just be a free-form object 'extensions', rather than use 'extra property' definitions
- Split between v0 and v1 versions of the API

Version 0.0.9:
- Added api path to refresh component and fault properties

Version 0.0.8:
- Added minimum/examples to the fault and system timeout values

Version 0.0.7:
- Fixed server.url path to include '.com'

Version 0.0.6:
- Added 'reporter' field to System Registration properties and Fault Registration properties

Version 0.0.5:
- Inserted 'systemTimeout' field to System Registration properties
- Inserted 'faultTimeout' field to Fault Registration properties 

Version 0.0.4:
- Changed base api path to /api/monitor/v0 from /system/v0

Version 0.0.3:
- Added optional UUID field to System Data type
- Removed unnecessary 'faults' field from system data type
- Expanded location to 'physicalLocation' and 'networkAddress'
- Added optional 'parent' field to represent dependent subsystems that want to be tracked independently
- Added missing permissions for security section
- Removed 'isCleared' field. Will simply ignore this message in the future

Version 0.0.2:
Initial external release
