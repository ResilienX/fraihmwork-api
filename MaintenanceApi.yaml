---
openapi: 3.0.1
info:
  title: FRAIHMWORK Maintenance API
  description: 'FRAIHMWORK allows for maintenance to be scheduled for components. To enable this, appointments with components and duration information must be modelled in the system. The purpose of this API is to create, read, update, and delete these data. This initial version does not imply any protections against malicious behavior from trusted endpoints. This API will versioned according to SemVer 2.0.0 rules (as described here: https://semver.org/)'
  contact:
    email: matt.synborski@resilienx.com
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://<site>.fraihmwork.resilienx.com/api/maintenance/v0
tags:
- name: MaintenanceAppointment
  description: Maintenance Appointment data model manipulation endpoints
paths:
  /maintenance/appointments:
    get:
      tags:
        - Maintenance Appointment
      summary: Retrieves all maintenance appointment information
      description: Returns all scheduled maintenance appointments and associated information
      operationId: retrieveMaintenanceAppointments
      parameters:
        - in: query
          name: componentUuid
          schema:
            type: string
            format: uuid
          required: false
          description: Uuid of the component's maintenance appointments being requested
        - in: query
          name: state
          schema:
            type: string
            format: MaintenanceAppointmentState
          required: false
          description: MaintenanceAppointmentState of the maintenance appointments being requested
        - in: query
          name: before
          schema:
            type: string
            format: date-time
          required: false
          description: The start times of the maintenance appointments being requested are before this date-time (ISO 8601)
        - in: query
          name: after
          schema:
            type: string
            format: date-time
          required: false
          description: The start times of the maintenance appointments being requested are after this date-time (ISO 8601)
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaintenanceAppointmentDefinition'
        401:
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        406:
          description: Not acceptable - only responds in application/json format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - MaintenanceDefinitionAuth:
        - fraihmwork.maintenance.read
        - fraihmwork.maintenance.write
    post:
      tags:
        - Maintenance Appointment
      summary: Add a new maintenance appointment to the FRAIHMWORK model
      description: Adds a new maintenance appointment to the system
      operationId: registerMaintenanceAppointment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenanceAppointmentDefinition'
      responses:
        201:
          description: Creates new maintenance appointment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        208:
          description: Already registered maintenance appointment. This will be the response if there is a match in the backend of the exact same maintenance appointment. If the maintenance appointment UUID is specified, then a match with an existing maintenance appointment uuid would also generate this response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Bad Request (invalid submission). Likely to happen because of an incorrectly formed start or end time, or referenced components or users do not exist in the system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        401:
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        406:
          description: Not acceptable - only responds in application/json format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - MaintenanceDefinitionAuth:
        - fraihmwork.maintenance.write       
  /maintenance/appointments/{uuid}:
    get:
      tags:
        - Maintenance Appointment
      summary: Retrieves specific maintenance appointment
      description: Returns a single maintenance appointment by UUID
      operationId: retrieveMaintenanceAppointment
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
            format: uuid
          description: Uuid of the maintenance appointment being requested
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintenanceAppointmentDefinition'
        401:
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        404:
          description: Could not find a target maintenance appointment uuid in the backend model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        406:
          description: Not acceptable - only responds in application/json format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - MaintenanceDefinitionAuth:
        - fraihmwork.maintenance.read
        - fraihmwork.maintenance.write
    put:
      tags:
        - Maintenance Appointment
      summary: Updates a specific maintenance appointment
      description: Updates a specific maintenance appointment by UUID
      operationId: updateMaintenanceAppointment
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
            format: uuid
          description: Uuid of the maintenance appointment being updated. 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenanceAppointmentDefinition'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Bad Request (invalid submission). Likely to happen because of an incorrectly formed start or end time, or referenced components or users do not exist in the system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        401:
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        404:
          description: Could not find a target maintenance appointment uuid in the backend model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        406:
          description: Not acceptable - only responds in application/json format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - MaintenanceDefinitionAuth:
        - fraihmwork.maintenance.write
    delete:
      tags:
        - Maintenance Appointment
      summary: Removes a specific maintenance appointment model from the system
      description: Deletes a specific maintenance appointment by UUID
      operationId: deleteMaintenanceAppointment
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
            format: uuid
          description: Uuid of the maintenance appointment being deleted
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        401:
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        404:
          description: Could not find a target maintenance appointment uuid in the backend model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        406:
          description: Not acceptable - only responds in application/json format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - MaintenanceDefinitionAuth:
        - fraihmwork.maintenance.write
                

components:
  schemas:
    Response:
      type: object
      description: A default uuid / message combination to convey simple success / error messages to the client
      properties:
        itemId:
          type: string
          format: uuid
        message:
          type: string
          description: The success message provided back to the client
      required:
        - message
    MaintenanceAppointmentState:
      type: string
      description: The state of the maintenance appointment
      enum:
        - SCHEDULED
        - CANCELED
        - STARTED
        - COMPLETED        
    MaintenanceAppointmentDefinition:
      type: object
      properties:
        maintenanceAppointmentUuid:
          type: string
          format: uuid
          description: The internal uuid of the maintenance appointment definition
        name:
          type: string
          description: The name of the maintenance appointment          
        description:
          type: string
          description: The description of the maintenance appointment
        userContactUuid:
          type: string
          format: uuid
          description: The User Contact uuid for who is responsible for performing the maintenance appointment
        startTime:
          type: string
          format: date-time
          description: Start time of maintenance appointment via ISO 8601 date-time format
          example: "2021-01-30T08:30:00Z"
        endTime:
          type: string
          format: date-time
          description: End time of maintenance appointment via ISO 8601 date-time format
          example: "2021-01-30T08:30:00Z"
        componentUuid:
          type: string
          format: uuid
          description: The uuid of the component scheduled for maintenance
        maintenanceAppointmentState:
          $ref: '#/components/schemas/MaintenanceAppointmentState'
      required: 
        - name
        - componentUuids
        - startTime
        - endTime
  securitySchemes:
    MaintenanceDefinitionAuth:      
      flows:
        clientCredentials:
          tokenUrl: https://well-known/oauth-authorization-server/token
          refreshUrl: https://well-known/oauth-authorization-server/refresh
          scopes:
            fraihmwork.maintenance.write: Client can add, delete, or modify maintenance details
            fraihmwork.maintenance.read: Client can view maintenance details
      type: oauth2
