---
openapi: 3.0.1
info:
  title: FRAIHMWORK Parameter Data API
  description: 'FRAIHMWORK allows for time series or single sample parameter data to be provided from the client. This API will be versioned according to SemVer 2.0 rules (as described here: https://semver.org/)'
  contact:
    email: matt.synborski@resilienx.com
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io

servers:
- url: https://<site>.fraihmwork.resilienx.com/api/parameter/v0

tags:
- name: Parameter
  description: Parameter data model manipulation endpoints

paths:
  /series:
    post:
      tags:
        - Parameter
      summary: Add new time series of parameter data to FRAIHMWORK model
      description: Add new time series of parameter data to FRAIHMWORK model
      operationId: registerParameterDataSeries
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeSeriesDataDefinition'
      responses:
        201:
          description: POSTed new time series parameter data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          
        400:
          description: Bad Request (invalid submission)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          
        401:
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        406:
          description: Not acceptable - only responds in application/json format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - ParameterDataDefinitionsAuth:
        - fraihmwork.parameter.data.write
        
  /sample:
    post:
      tags:
        - Parameter
      summary: Add new timestamped sample of parameter data to FRAIHMWORK model
      description: Add new timestamped sample of parameter data to FRAIHMWORK model
      operationId: registerParameterDataSample
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SingleDataDefinition'
      responses:
        201:
          description: POSTed new time series parameter data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          
        400:
          description: Bad Request (invalid submission)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          
        401:
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        406:
          description: Not acceptable - only responds in application/json format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - ParameterDataDefinitionsAuth:
        - fraihmwork.parameter.data.write        

components:
  schemas:
    Response:
      type: object
      description: A default uuid / message combination to convey simple success / error messages to the client
      properties:
        itemId:
          type: string
          format: uuid
        message:
          type: string
          description: The success message provided back to the client
      required:
        - message
        
    ColumnDefinition:
      description: The definition of the columns of the parameter data. Must have the same length as the DataElements fields array
      type: array
      items:
        $ref: '#/components/schemas/ColumnElement'
          
    ColumnElement:
      type: object
      description: The column element
      properties:
        
        name: 
          description: The name of the column
          type: string
          pattern: '^[a-zA-Z0-9]{2,}'
        
        units: 
          description: The units for the parameter data elements in a given column
          type: string
        
        dataType:
          $ref: '#/components/schemas/DataType'
                   
      required:
        - name
        - dataType

    DataDefinition:
      description: The time series data, an ordered collection relative to the timestamp field
      type: array
      items: 
        $ref: '#/components/schemas/DataSample'
        

    DataElement:
      type: object
      properties:
        value:
          description: The magnitude of the data value described in string form
          type: string
          
        quality: 
          description: The quality ratio of the data value (bounded from 0.0 to 1.0)
          type: number          
          format: double
          minimum: 0.0
          maximum: 1.0
        
        annotation: 
          description: The annotation for the data value
          type: string
          
      required:
        - value        
        
    DataSample:
      description: A row of data elements described by the column definition, associated with a single discrete timestamp
      type: object
      properties:
        timestamp:
          description: the timestamp of the data elements
          type: string
          format: date-time
            
        fields:
          description: Must have the same length as the ColumnDefinition array
          type: array
          items:
            $ref: '#/components/schemas/DataElement'
            
      required:
        - timestamp
        - fields

    DataType:
      type: string
      enum:
        - NUMBER
        - INTEGER
        - STRING
        
    HeaderDefinition:
      type: object
      properties: 
        messageType:
          type: string          
          description: The type of the message

        messageVersion:
          type: string
          description: The version string for the parameter data messageType
          
      required:
        - messageType
        - version

    SingleDataDefinition:
      type: object
      description: A definition of a set of parameter data having a single discrete timestamp
      properties:

        header:
          $ref: '#/components/schemas/HeaderDefinition'
          
        columns:
          $ref: '#/components/schemas/ColumnDefinition'

        data:
          $ref: '#/components/schemas/DataSample'

      required: 
        - header
        - columns
        - data

    TimeSeriesDataDefinition:
      type: object
      description: A definition of time series data. This is loosely based upon Json Time Series, Version 1.0 (https://docs.eagle.io/en/latest/reference/index.html)
      properties:

        header:
          $ref: '#/components/schemas/HeaderDefinition'
          
        columns:
          $ref: '#/components/schemas/ColumnDefinition'

        data:
          $ref: '#/components/schemas/DataDefinition'

      required: 
        - header
        - columns
        - data
        
  securitySchemes:
    ParameterDataDefinitionsAuth:      
      flows:
        clientCredentials:
          tokenUrl: https://well-known/oauth-authorization-server/token
          refreshUrl: https://well-known/oauth-authorization-server/refresh
          scopes:
            fraihmwork.parameter.data.read: Client can read parameter data
            fraihmwork.parameter.data.write: Client can add parameter data 
      type: oauth2
