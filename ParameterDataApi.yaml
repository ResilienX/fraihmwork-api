---
openapi: 3.0.1
info:
  title: FRAIHMWORK Parameter Data API
  description: 'FRAIHMWORK allows for time series or single sample parameter data to be provided from the client. This API will be versioned according to SemVer 2.0 rules (as described here: https://semver.org/)'
  contact:
    email: matt.synborski@resilienx.com
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io

servers:
- url: https://<site>.fraihmwork.resilienx.com/api/parameter/v0

tags:
- name: Parameter
  description: Parameter data model manipulation endpoints

paths:
  /series:
    post:
      tags:
        - Parameter
      summary: Add new time series of parameter data to FRAIHMWORK model
      description: Add new time series of parameter data to FRAIHMWORK model
      operationId: registerParameterDataSeries
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeSeriesDataDefinition'
      responses:
        201:
          description: POSTed new time series parameter data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          
        400:
          description: Bad Request (invalid submission)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          
        401:
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        406:
          description: Not acceptable - only responds in application/json format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - ParameterDataDefinitionsAuth:
        - fraihmwork.parameter.data.write
        
  /sample:
    post:
      tags:
        - Parameter
      summary: Add new timestamped sample of parameter data to FRAIHMWORK model
      description: Add new timestamped sample of parameter data to FRAIHMWORK model
      operationId: registerParameterDataSample
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SingleDataDefinition'
      responses:
        201:
          description: POSTed new time series parameter data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          
        400:
          description: Bad Request (invalid submission)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          
        401:
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        406:
          description: Not acceptable - only responds in application/json format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - ParameterDataDefinitionsAuth:
        - fraihmwork.parameter.data.write        

components:
  schemas:
    Response:
      type: object
      description: A default uuid / message combination to convey simple success / error messages to the client
      properties:
        itemId:
          type: string
          format: uuid
        message:
          type: string
          description: The success message provided back to the client
      required:
        - message

    DataSample:
      type: object
      description: A definition of a set of parameter data having a single discrete timestamp
      properties:
      
        timestamp:
          type: string
          format: date-time
          description: The timestamp the applies to the measurements in the data field (DataSample)
          
        data: 
          description: A row of one or more data values, associated with a single discrete timestamp. The fields within this object should always follow a consistent order from request to request. Key/value pairs should be used, including units in the key name
          type: object
          additionalProperties: true    
        
      required:
        - timestamp
        - data    

    HeaderDefinition:
      type: object
      properties: 
      
        componentUuid:
          type: string
          format: uuid
          description: The unique identifier of the component within FRAIHMWORK that the parameter data associates with
      
        messageType:
          type: string          
          description: The type of the message, dictated by the client for delineating individual message formats

        messageVersion:
          type: string
          description: The version string for the parameter data messageType. If the client changes the data fields within a message stream, they should increment the version accordingly to distinguish message format along with the messageType
          
      required:
        - componentUuid
        - messageType
        - version

    SingleDataDefinition:
      type: object
      description: A definition of a set of parameter data having a single discrete timestamp. For multiple parameter observations for the given timestamp, use multiple key/value pairs with unique keys. 
      properties:

        header:
          $ref: '#/components/schemas/HeaderDefinition'

        single:
          $ref: '#/components/schemas/DataSample'
         
      required: 
        - header
        - single

    TimeSeriesDataDefinition:
      type: object
      description: A time series ordered collection for a set of parameter data. For multiple parameter observations for the given timestamp, use multiple key/value pairs with unique keys. It is encouraged that each element in the array has the same keys in the same order
      properties:

        header:
          $ref: '#/components/schemas/HeaderDefinition'

        series:
          type: array
          items: 
            $ref: '#/components/schemas/DataSample'
                        
      required: 
        - header
        - series
        
  securitySchemes:
    ParameterDataDefinitionsAuth:      
      flows:
        clientCredentials:
          tokenUrl: https://well-known/oauth-authorization-server/token
          refreshUrl: https://well-known/oauth-authorization-server/refresh
          scopes:
            fraihmwork.parameter.data.read: Client can read parameter data
            fraihmwork.parameter.data.write: Client can add parameter data 
      type: oauth2
