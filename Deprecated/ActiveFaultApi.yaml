openapi: 3.0.1
info:
  title: Fault reporting API
  description: 'API to retrieve the latest processed fault data from FRAIHMWORK'
  contact:
    email: g.dorchies@resilienx.com
  version: 0.0.2
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io  
servers:
- url: https://<server>.fraihmwork.resilienx.com/api/active/faults/v0/
tags:
- name: Fault Data Retrieval
  description: Functions for getting all faults, faults by source & code, by source, code & severity, and by ID.
paths:
  /faults:
    get:
      tags:
        - Fault Data Retrieval
      summary: findAllFaults
      operationId: findAllFaults
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fault'
        401:
          description: Unauthorized
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        404:
          description: Not Found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      deprecated: false
      security:
      - SystemRead:
        - fraihmwork.system.read
  /faults/search/findFaultsBySourceAndCode:
    get:
      tags:
        - Fault Data Retrieval
      summary: findFaultsBySourceAndCode
      operationId: findFaultsBySourceAndCode
      parameters:
        - name: source
          in: query
          description: source
          schema:
            type: string
            format: uuid      
        - name: code
          in: query
          description: code
          schema:
            type: string

      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fault'
        401:
          description: Unauthorized
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        404:
          description: Not Found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      deprecated: false
      security:
      - SystemRead:
        - fraihmwork.system.read
  '/faults/{uuid}':
    get:
      tags:
        - Fault Data Retrieval
      summary: findFaultByUuid
      operationId: findFaultByUuid
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Fault'
        401:
          description: Unauthorized
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        404:
          description: Not Found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      deprecated: false      
      security:
      - SystemRead:
        - fraihmwork.system.read
components:
  schemas:  
    Response:
      type: object
      properties:
        itemId:
          type: string
          format: uuid
        message:
          type: string
          description: The message provided back to the client
      required:
        - message    
  
    Fault:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        id:
          type: string
          format: uuid
        name:
          type: string
        severityLabel:
          type: string
          enum:
            - LOW
            - MEDIUM
            - HIGH
            - UNKNOWN
        source:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
      title: Fault   
  securitySchemes:
    SystemRead:
      flows:
        clientCredentials:
          tokenUrl: https://well-known/oauth-authorization-server/token
          refreshUrl: https://well-known/oauth-authorization-server/refresh
          scopes:
            fraihmwork.system.read: Client may query for any system, version or state data that the service can provide
      type: oauth2
