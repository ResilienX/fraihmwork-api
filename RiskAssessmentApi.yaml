---
openapi: 3.0.1
info:
  title: Risk Assessment API
  description: 'This API allows for generating risk assessment reports against flight operations. This API will be versioned according to SemVer 2.0.0 rules (as described here: https://semver.org/).'
  contact:
    email: support@resilienx.com
  version: 0.2.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io

servers:
- url: https://site.fraihmwork.resilienx.com/api

tags:
- name: Risk Assessment
  description: Functions relating to risk assessment for flight operations

paths:
  /risk/v0/operation:
    post:
      tags:
      - Risk Assessment
      summary: Post a flight operation for risk assessment
      operationId: postFlightOperation
      requestBody:
        description: JSON description of the flight operation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightOperation'
      responses:
        202:
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        400:
          description: Bad Request - client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        401:
          description: Not Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden - client is not authorized to post flight operations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        406:
          description: Not Acceptable - only responds in application/json format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        409:
          description: Conflict - flight operation with specified unique identifier exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - OAuth2: [fraihmwork.component.write, fraihmwork.component.admin]

  /risk/v0/operation/{uuid}:
    get:
      tags:
      - Risk Assessment
      summary: Retrieve a flight operation for risk assessment
      operationId: getFlightOperationByUuid
      parameters:
      - name: uuid
        in: path
        description: The unique identifier of the flight operation
        schema:
          type: string
          format: uuid
        required: true
      responses:
        200:
          description: OK - flight operation found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FlightOperation'
        400:
          description: Bad Request - client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        401:
          description: Not Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden - client is not authorized to query flight operations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        404:
          description: Not Found - flight operation with specified unique identifier does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        406:
          description: Not Acceptable - only responds in application/json format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - OAuth2: [fraihmwork.component.read, fraihmwork.component.write, fraihmwork.component.admin]

  /risk/v0/assessment:
    get:
      tags:
      - Risk Assessment
      summary: Request risk assessment for a specific flight operation
      operationId: getRiskAssessment
      parameters:
      - name: operationUuid
        in: query
        description: The unique identifier of the flight operation for which to retrieve the risk assessment report
        schema:
          type: string
          format: uuid
        required: true
      responses:
        200:
          description: OK - successful risk assessment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskAssessment'
        202:
          description: Accepted - risk assessment in progress
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        401:
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden - client is not authorized to query risk assessment reports
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        404:
          description: Not Found - flight operation with specified unique identifier does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        406:
          description: Not Acceptable - only responds in application/json format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - OAuth2: [fraihmwork.component.read, fraihmwork.component.write, fraihmwork.component.admin]

  /risk/v0/assessment/rawResults:
    get:
      tags:
      - Risk Assessment
      summary: Request risk assessment's raw results for a specific flight operation
      operationId: getRiskAssessmentRawResults
      parameters:
      - name: operationUuid
        in: query
        description: The unique identifier of the flight operation for which to retrieve the risk assessment's raw results
        schema:
          type: string
          format: uuid
        required: true
      responses:
        200:
          description: OK - successful risk assessment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RawResults'
        202:
          description: Accepted - risk assessment in progress
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        401:
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden - client is not authorized to query risk assessment raw results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        404:
          description: Not Found - flight operation with specified unique identifier does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        406:
          description: Not Acceptable - only responds in application/json format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - OAuth2: [fraihmwork.component.read, fraihmwork.component.write, fraihmwork.component.admin]

components:
  schemas:
    Response:
      type: object
      properties:
        itemId:
          type: string
          format: uuid
          description: UUID of the relevant resource, if applicable
        message:
          type: string
          description: The message provided back to the client
      required:
      - message

    Vehicle:
      type: object
      description: An entity physically performing a flight operation
      properties:
        uuid:
          type: string
          format: uuid
          description: The unique identifier of the vehicle. Assigned by the caller
        type:
          type: string
          enum: ['ROTOR', 'FIXED_WING', 'FIXED_WING_WITH_PARACHUTE']
          description: The type of the vehicle
        weightKilograms:
          type: number
          format: double
          minimum: 0.2
          maximum: 3000.0
          description: The weight of the vehicle in kilograms
        dragCoefficient:
          type: number
          format: double
          minimum: 0.001
          maximum: 2.0
          description: The drag coefficient of the vehicle
        diameterMeters:
          type: number
          format: double
          minimum: 0.1
          maximum: 6.0
          description: The diameter of the vehicle in meters
        defaultSpeedMetersPerSecond:
          type: number
          format: double
          minimum: 0.0
          description: The default speed of the vehicle in meters per second. It may be overridden by a speed value for a waypoint
      required:
      - uuid
      - type
      - weightKilograms
      - dragCoefficient
      - diameterMeters

    Waypoint:
      type: object
      description: An intermediate point of a flight operation. Either 'timeSecondsSinceStart' or 'speedMetersPerSecond' is expected
      properties:
        latitude:
          type: number
          format: double
          minimum: -90.0
          maximum: 90.0
          description: The latitude of the waypoint in decimal degrees
        longitude:
          type: number
          format: double
          minimum: -180.0
          maximum: 180.0
          description: The longitude of the waypoint in decimal degrees
        altitudeMetersMsl:
          type: number
          format: double
          description: The altitude of the waypoint in meters above above mean sea level
        timeSecondsSinceStart:
          type: number
          format: double
          minimum: 0.0
          description: The time of the waypoint in seconds since the start time
        speedMetersPerSecond:
          type: number
          format: double
          minimum: 0.0
          description: The speed of the vehicle as it travels from this waypoint to the next waypoint in meters per second. If not provided, the default speed of the vehicle may be used
      required:
      - latitude
      - longitude
      - altitudeMetersMsl

    WindMeasurement:
      type: object
      description: A wind measurement at a specific altitude
      properties:
        altitudeMetersMsl:
          type: number
          format: double
          description: The altitude where the wind is applicable in meters above above mean sea level
        directionDegrees:
          type: number
          format: double
          minimum: 0.0
          maximum: 360.0
          exclusiveMaximum: true
          description: The direction of the wind in degrees
        speedMetersPerSecond:
          type: number
          format: double
          minimum: 0.0
          description: The speed of the wind in meters per second
      required:
      - altitudeMetersMsl
      - directionDegrees
      - speedMetersPerSecond

    ObstacleProximityRiskThresholds:
      type: object
      description: A collection of thresholds for setting obstacle proximity risk level
      properties:
        minimumDistanceMeters:
          type: number
          format: double
          minimum: 0.0
          description: The threshold for the minimum distance to any obstacle in meters
        obstacleCount:
          type: number
          format: double
          minimum: 0
          description: The threshold for the number of obstacles within the minimum distance
      required:
      - minimumDistanceMeters
      - obstacleCount

    GroundImpactRiskThresholds:
      type: object
      description: A collection of thresholds for setting ground impact risk level
      properties:
        probabilityOfCasualty:
          type: number
          format: double
          minimum: 0.0
          maximum: 1.0
          description: The threshold for the probability of casualty for ground impact impact
      required:
      - probabilityOfCasualty

    NavigationReliabilityRiskThresholds:
      type: object
      description: A collection of thresholds for setting navigation reliability risk level
      properties:
        satelliteCount:
          type: integer
          format: int32
          minimum: 0
          description: The threshold for the number of visible satellites
        pdop:
          type: number
          format: double
          minimum: 0.0
          description: The threshold for the position dilution of precision (PDOP) indicating the strength of the satellite constellation for determining position
        weightedRisk:
          type: number
          format: double
          minimum: 0.0
          maximum: 1.0
          description: The threshold for the weighted risk which incorporates satellite count, PDOP, and map tile availability
      required:
      - satelliteCount
      - pdop
      - weightedRisk

    RiskThresholds:
      type: object
      description: A collection of thresholds for determining individual risk levels and overall risk level
      properties:
        obstacleProximityRisk:
          type: object
          description: A collection of thresholds for determining the obstacle proximity risk level based on the distance and number of obstacles like buildings
          properties:
            mediumThresholds:
              $ref: '#/components/schemas/ObstacleProximityRiskThresholds'
              description: A collection of thresholds for setting obstacle proximity risk level to MEDIUM
            highThresholds:
              $ref: '#/components/schemas/ObstacleProximityRiskThresholds'
              description: A collection of thresholds for setting obstacle proximity risk level to HIGH
          required:
          - mediumThresholds
          - highThresholds
        groundImpactRisk:
          type: object
          description: A collection of thresholds for determining ground impact risk level based on the probability of casualty
          properties:
            mediumThresholds:
              $ref: '#/components/schemas/GroundImpactRiskThresholds'
              description: A collection of thresholds for setting ground impact risk level to MEDIUM
            highThresholds:
              $ref: '#/components/schemas/GroundImpactRiskThresholds'
              description: A collection of thresholds for setting ground impact risk level to HIGH
          required:
          - mediumThresholds
          - highThresholds
        navigationReliabilityRisk:
          type: object
          description: A collection of thresholds for determining navigation reliability risk level
          properties:
            mediumThresholds:
              $ref: '#/components/schemas/NavigationReliabilityRiskThresholds'
              description: A collection of thresholds for setting navigation reliability risk level to MEDIUM
            highThresholds:
              $ref: '#/components/schemas/NavigationReliabilityRiskThresholds'
              description: A collection of thresholds for setting navigation reliability risk level to HIGH
            weights:
              type: object
              description: The weighting to apply to each risk level when determining the navigation reliability risk. The weights should sum to 1.0
              properties:
                satelliteCount:
                  type: number
                  format: double
                  minimum: 0.0
                  maximum: 1.0
                  description: The weighting of satellite count risk
                pdop:
                  type: number
                  format: double
                  minimum: 0.0
                  maximum: 1.0
                  description: The weighting of PDOP risk
                mapTileAvailability:
                  type: number
                  format: double
                  minimum: 0.0
                  maximum: 1.0
                  description: The weighting of map tile availability risk
              required:
              - satelliteCount
              - pdop
              - mapTileAvailability
            forceHighRiskIfMapTileUnavailable:
              type: boolean
              description: The toggle for forcing navigation reliability risk level to HIGH if map tile is unavailable
          required:
          - mediumThresholds
          - highThresholds
          - weights
          - forceHighRiskIfMapTileUnavailable
        overallRisk:
          type: object
          description: A collection of thresholds for determining overall risk level based on a weighting of the individual risk levels
          properties:
            weights:
              type: object
              description: The weighting to apply to each risk level when determining the overall risk. The weights should sum to 1.0
              properties:
                obstacleProximity:
                  type: number
                  format: double
                  minimum: 0.0
                  maximum: 1.0
                  description: The weighting of obstacle proximity risk
                groundImpact:
                  type: number
                  format: double
                  minimum: 0.0
                  maximum: 1.0
                  description: The weighting of ground impact risk
                navigationReliability:
                  type: number
                  format: double
                  minimum: 0.0
                  maximum: 1.0
                  description: The weighting of navigation reliability risk
              required:
              - obstacleProximity
              - groundImpact
              - navigationReliability
            thresholds:
              type: object
              description: A collection of thresholds for determining overall risk level
              properties:
                medium:
                  type: number
                  format: double
                  minimum: 0.0
                  maximum: 1.0
                  description: The threshold for setting overall risk level to MEDIUM
                high:
                  type: number
                  format: double
                  minimum: 0.0
                  maximum: 1.0
                  description: The threshold for setting overall risk level to HIGH
              required:
              - medium
              - high
            noGoHighRiskWaypointPercentage:
              type: number
              format: double
              minimum: 0.0
              maximum: 1.0
              description: The threshold for the percentage of waypoints with an overall HIGH risk for setting Flight Go-Ahead Indicator to FALSE

    FlightOperation:
      type: object
      description: A collection of ordered waypoints to be flown by a vehicle, plus metadata and thresholds to aid in risk assessment
      properties:
        uuid:
          type: string
          format: uuid
          description: The unique identifier of the flight operation. Optionally assigned by the service
        startTime:
          type: string
          format: date-time
          description: The timestamp when the flight operation will start. Timestamp format is as specified by RFC 3339 section 5.6
        vehicle:
          $ref: '#/components/schemas/Vehicle'
        waypoints:
          type: array
          description: An ordered list of waypoints making up the flight operation
          minItems: 2
          items:
            $ref: '#/components/schemas/Waypoint'
        weatherServiceEnabled:
          type: boolean
          description: The toggle for enabling use of any available dynamic weather service data. If enabled, the wind profile is ignored
        windProfile:
          type: array
          description: A list of wind measurements making up a wind profile
          items:
            $ref: '#/components/schemas/WindMeasurement'
        riskThresholds:
          $ref: '#/components/schemas/RiskThresholds'
          description: The risk thresholds provided to override pre-configured thresholds
      required:
      - startTime
      - vehicle
      - waypoints

    RiskStatistics:
      type: object
      description: A collection of statistics for the risk assessment
      properties:
        overallWeightedRisk:
          type: number
          format: double
          description: The weighted overall risk level
        totalWaypointCount:
          type: integer
          format: int32
          description: The total number of waypoints assessed for risk
        highRiskWaypointCount:
          type: integer
          format: int32
          description: The number of waypoints receiving a HIGH risk
        mediumRiskWaypointCount:
          type: integer
          format: int32
          description: The number of waypoints receiving a MEDIUM risk
        lowRiskWaypointCount:
          type: integer
          format: int32
          description: The number of waypoints receiving a LOW risk
        obstacleProximityRiskyWaypointPercentage:
          type: number
          format: double
          minimum: 0.0
          maximum: 100.0
          description: The percentage of waypoints receiving a HIGH or MEDIUM obstacle proximity risk
        groundImpactRiskyWaypointPercentage:
          type: number
          format: double
          minimum: 0.0
          maximum: 100.0
          description: The percentage of waypoints receiving a HIGH or MEDIUM ground impact risk
        navigationReliabilityRiskyWaypointPercentage:
          type: number
          format: double
          minimum: 0.0
          maximum: 100.0
          description: The percentage of waypoints receiving a HIGH or MEDIUM navigation reliability risk
      required:
      - overallWeightedRisk
      - totalWaypointCount
      - highRiskWaypointCount
      - mediumRiskWaypointCount
      - lowRiskWaypointCount

    RiskLevel:
      type: string
      enum: ['LOW', 'MEDIUM', 'HIGH']
      description: The levels of risk

    RiskResults:
      type: object
      description: The pairing of a waypoint from the flight operation and associated risk levels
      properties:
        waypoint:
          $ref: '#/components/schemas/Waypoint'
          description: A waypoint from the flight operation
        overallRiskLevel:
          $ref: '#/components/schemas/RiskLevel'
          description: The overall risk level for the given waypoints
        obstacleProximityRiskLevel:
          $ref: '#/components/schemas/RiskLevel'
          description: The obstacle proximity risk level for the given waypoints
        groundImpactRiskLevel:
          $ref: '#/components/schemas/RiskLevel'
          description: The ground impact risk level for the given waypoints
        navigationReliabilityRiskLevel:
          $ref: '#/components/schemas/RiskLevel'
          description: The navigation reliability risk level for the given waypoints
      required:
      - waypoint
      - overallRiskLevel

    RiskAssessment:
      type: object
      description: A risk assessment report including a Flight Go-Ahead Indicator, plus supporting artifacts
      properties:
        flightOperationUuid:
          type: string
          format: uuid
          description: The unique identifier of the flight operation for which the risk assessment report was generated
        flightGoAheadIndicator:
          type: boolean
          description: The go-ahead indication for the flight operation based on the risk assessment with TRUE meaning go-ahead and FALSE meaning do not go-ahead
        riskStatistics:
          $ref: '#/components/schemas/RiskStatistics'
          description: The statistics for this risk assessment
        riskResults:
          type: array
          description: An ordered list of waypoints making up the flight operation and their associated risk levels
          items:
            $ref: '#/components/schemas/RiskResults'
        riskThresholds:
          $ref: '#/components/schemas/RiskThresholds'
          description: The thresholds used for this risk assessment
      required:
      - flightOperationUuid
      - flightGoAheadIndicator
      - riskStatistics
      - riskResults
      - riskThresholds

    RawResults:
      type: object
      description: A freeform object for risk assessment raw results, plus associated flight operation unique identifier
      properties:
        flightOperationUuid:
          type: string
          format: uuid
          description: The unique identifier of the flight operation for which the raw results were generated
        rawResults:
          type: object
          additionalProperties: true
          description: The freeform risk assessment raw results
      required:
      - flightOperationUuid
      - rawResults

  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          # Note that multiple authorization servers can be specified to serve this API, and this description only provides details for the default
          # internal security configuration. Each of the scopes below corresponds to a FRAIHMWORK permission, and can be configured to align to a
          # different scope or role provided by a 3rd party authorization server, if required. However, at time of writing it is assumed that
          # authentication activities are always happening over a client-credentials oauth2 flow.
          tokenUrl: https://well-known/oauth-authorization-server/token
          refreshUrl: https://well-known/oauth-authorization-server/refresh
          scopes:
            # Since no requirements regarding authorization scopes, the component scopes are being used for risk assessment until further notice
            fraihmwork.component.admin: Client may create, read, update, or delete any component regardless of creator.
            fraihmwork.component.write: Client may create new components, but can only update and delete components they create. Client may read all components regardless of creator.
            fraihmwork.component.read: Client may read any component that FRAIHMWORK can provide, regardless of creator.
