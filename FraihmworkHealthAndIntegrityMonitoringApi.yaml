---
openapi: 3.0.1
info:
  title: FRAIHMWORK Health And Integrity Monitoring Server API
  description: 'FRAIHMWORK allows for multiple implementations of basic health and integrity monitoring services for other systems in a given network. This set of APIs are for systems that elect to do HTTP POST calls to push their state and fault information to the FRAIHMWORK platform, rather than hosting their own server endpoint or TCP/UDP streams. This initial version does not imply any protections against malicious behavior from trusted endpoints. This API will versioned according to SemVer 2.0 rules (as described here: https://semver.org/)'
  contact:
    email: g.dorchies@resilienx.com
  version: 0.0.9
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io

servers:
- url: https://<site>.fraihmwork.resilienx.com/api/monitor/v0

tags:
- name: System
  description: High level system and service information
- name: Fault
  description: Fault information

paths:
  /system:
    post:
      tags:
      - System
      summary: Post an update on all current system properties
      description: This information allows FRAIHMWORK to track basic information about a system. Any extra or custom fields are expected to always be present even if null values are provided at first. Using this endpoint means that the system needs to be registered (under the hood), so a UUID will be created and assigned in the response
      operationId: postSystemInformation
      requestBody:
        description: JSON description of the current system state
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/System'
      responses:
        201:
          description: Successfully posted new service information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        208:
          description: Already reported
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        401:
          description: Not authenticated
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        406:
          description: Not acceptable - only responds in application/json format
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Server error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - SystemWrite: [system.write]

  /system/{uuid}:
    put:
      tags:
      - System
      summary: Update existing properties about a system
      description: This information allows FRAIHMWORK to track basic information about a system. Any extra or custom fields are expected to always be present even if null values are provided at first. 
      operationId: updateSystemInformation
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
            format: uuid
          description: Uuid of the system properties being updated
      requestBody:
        description: JSON description of the current system state
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/System'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        401:
          description: Not authenticated
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        404:
          description: UUID not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        406:
          description: Not acceptable - only responds in application/json format
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Server error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - SystemWrite:
        - fraihmwork.system.write

    delete:  
      tags:
      - System
      summary: Deletes an active entry
      description: This operation removes a system's basic information from FRAIHMWORK, thus rendering itself inactive.
      operationId: deleteSystemInformation
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
            format: uuid
          description: Uuid of the system properties being deleted
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        401:
          description: Not authenticated
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        404:
          description: UUID not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        406:
          description: Not acceptable - only responds in application/json format
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Server error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - SystemWrite:
        - fraihmwork.system.write
   
  /system/{uuid}/refresh:
    post:
      tags:
      - System
      summary: Refresh existing system properties
      description: Permits an already registered system to be refreshed without changing any properties
      operationId: refreshSystemInformation
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
            format: uuid
          description: Uuid of the system property being refreshed
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        401:
          description: Not authenticated
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        404:
          description: UUID not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Server error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - SystemWrite:
        - fraihmwork.system.write
      
  /fault:
    post:
      tags:
      - Fault
      summary: Posts a new fault that is affecting a system
      description: Allows a system to report one or more faults currently affecting the system. Using this endpoint means that the client is not managing their own fault IDs, and the fault will require a new tracking UUID (that will be created and assigned in the response).
      operationId: postNewFault
      requestBody:
        description: JSON description of a new, updated, or cleared fault
        required: true
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/Fault'
      responses:
        201:
          description: Created new fault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        208:
          description: Already reported
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        401:
          description: Not authenticated
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden - this service will not provide fault information
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'   
        404:
          description: The referenced component UUID cannot be found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        406:
          description: Not acceptable - only responds in application/json format
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Server error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - FaultWrite:
        - fraihmwork.fault.write
        
  /fault/{uuid}:
    put:
      tags:
      - Fault
      summary: Updates a fault that is affecting a system
      description: Allows a system to report one or more faults currently affecting the system
      operationId: updateFault
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
            format: uuid
          description: Uuid of the fault being updated
      requestBody:
        description: JSON description of a new, updated, or cleared fault
        required: true
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/Fault'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        401:
          description: Not authenticated
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden - this service cannot post fault information
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        404:
          description: The referenced fault UUID cannot be found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        406:
          description: Not acceptable - only responds in application/json format
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Server error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - FaultWrite:
        - fraihmwork.fault.write
        
    delete:
      tags:
      - Fault
      summary: Clears a new fault that is no longer affecting a system
      description: Allows a system to clear a fault no longer affecting it
      operationId: deleteFault
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
            format: uuid
          description: Uuid of the fault being removed
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        401:
          description: Not authenticated
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden - this service cannot delete this item
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        404:
          description: Unregistered UUID, or fault doesn't exist
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        406:
          description: Not acceptable - only responds in application/json format
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Server error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - FaultWrite:
        - fraihmwork.fault.write
        
  /fault/{uuid}/refresh:
    post:
      tags:
      - Fault
      summary: Refresh a fault that is affecting a system
      description: Allows a system to refresh a fault currently affecting the system without changing any properties
      operationId: refreshFault
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
            format: uuid
          description: Uuid of the fault being refreshed
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        401:
          description: Not authenticated
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        403:
          description: Forbidden - this service cannot post fault information
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        404:
          description: The referenced fault UUID cannot be found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        406:
          description: Not acceptable - only responds in application/json format
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        500:
          description: Server error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - FaultWrite:
        - fraihmwork.fault.write

components:
  schemas:
    Response:
      type: object
      properties:
        itemId:
          type: string
          format: uuid
        message:
          type: string
          description: The success message provided back to the client
      required:
        - message

    System:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          description: The unique identifier of this system, if provided by the client. If left blank, it is assumed that the UUID is being handled by the FRAIHMWORK server.
        name:
          type: string
          description: The name of the system
        description:
          type: string
          description: Summary of services provided by this system
        state:
          $ref: '#/components/schemas/State'
        version:
          $ref: '#/components/schemas/Version'
        physicalLocation:
          type: string
          description: General description of where the system or component actually is (to differentiate it from other, redundant systems)
        networkAddress:
          type: string
          description: An IPv4, IPv6, DNS or other URI that can be used to reach back to this system. This is for documentation purposes and will not currently be validated
        manufacturer:
          type: string
          description: Company or entity providing the service or system
        model:
          type: string
          description: The exact model string or number that describes this system
        startupTime:
          type: string
          format: date-time
          description: The time that this system last reached an operational state. If not provided, FRAIHMWORK will assume that the start time is last time it received a message with state = OPERATIONAL from this system. Follows format as specified by RFC 3339 section 5.6, which is a specific implementation of ISO 8601
        parent:
          type: string
          format: uuid
          description: This is an optional field that can be used to denote that this is a subsystem of a different system. If left blank, it is assumed that there is no parent for this system, otherwise, it is expected that the UUID provided corresponds to an already existing and registered system.
        timeOfValidity:
          type: string
          format: date-time
          description: The last timestamp when this message's information was guaranteed to be accurate. If this field is not provided, it is assumed that the time of receipt of this message is the time of validity
        systemTimeout:
          type: integer
          minimum: 1
          example: 100
          description: Seconds within which a system update is expected from the client. If no update is received, the system will be considered lifeless.
        reporter:
          type: string
          format: uuid
          description: The unique identifier of the reporter of this system, if provided.
        additionalProperties:
          type: array
          items:
            $ref: '#/components/schemas/ExtraProperty'
      required: 
        - name
        - state

    ExtraProperty:
      type: object
      properties:
        name:
          type: string
          description: Name of property
        value:
          type: string
          description: String interpretation of the value of the property
        type:         
          type: string
          description: Optional hint on how to interpret this property field
          enum:
            - INTEGER
            - FLOAT
            - STRING
            - DATE_TIME
            - BOOLEAN
            - RAW
      required: 
        - name
        - value
        
    Version:
      type: object
      description: The version of the system For maximum flexibility, this is provided as string values to allow for different versioning schemes.
      properties:
        hardware:
          type: string
          description: The version of the system's hardware package, if applicable
        software:
          type: string
          description: The version of the system's software package, if applicable
        firmware:
          type: string
          description: The version of the system's firmware package, if applicable
        configuration:
          type: string
          description: The version of the system's configuration, if applicable

    State:
      type: object
      properties:
        state:
          type: string
          description: "
          This is a high level description of the system or subsystem state. 
          UNAVAILABLE describes a system that cannot provide its normal services, but not due to a fault with the system. This could be because the service cannot access its host system, the system is being restarted, or any other similar reason
          STARTING_UP is for services being powered on - services may not be available yet but they will be soon
          ONLINE describes a system with services provided
          FAULTED describes a system that has a significant fault that is degrading service quality and/or is not meeting its performance specifications. In general, if this system is reporting faults, this state should be used in conjunction with any HIGH (and, situationally, MEDIUM) level faults "
          enum:
          - UNAVAILABLE
          - STARTING_UP
          - ONLINE
          - FAULTED
        description:
          type: string
          description: An optional detailed description of the system state in order to provide
            more context. This field can be left blank if the enum fully describes
            the system state with no additional qualifications.
      required:
        - state

    Fault:
      type: object
      description: A fault describes a specific condition that is adversely affecting the reporting system or subsystem. FRAIHMWORK uses this information to alert maintainers of problems, or to integrate various faults to identify larger system of system problems. Faults are identified by FRAIHMWORK by their name, code and source. Therefore there are assumptions to how faults are reported that should be abided by. Namely - each unique fault should have the same name and code information. Updates to the same fault should be reusing these keys, but can allow for other properties to change over time. If a fault is no longer active, it is expected that the system provides an update notifying FRAIHMWORK that the fault has been cleared. Otherwise, the fault will automatically clear after a default time interval if there have been no updates. 
      properties:
        uuid:
          type: string
          format: uuid
          description: The unique identifier of this fault, if provided by the client. If left blank, it is assumed that the UUID is being handled by the FRAIHMWORK server.
        name:
          type: string
          description: A brief high level summary of the fault
          
        description:
          type: string
          description: A more detailed description of the fault with as much relevant information as possible. Implementors are encouraged to define a standard format for fault descriptions that works for their service
        source:
          type: string
          format: uuid
          description: The source UUID of the component that is causing the fault. Used when the client can detect failures with other systems or subsystems. When not included, it is assumed that the source is the UUID of this reporting client
        code:
          type: integer
          description: An integer representation of the fault code. This must be a value that always corresponds to a specific type of fault given a specific version of the system. Implementers are encouraged to give meaningful numbers to faults - for example, faults relating to firmware issues may all fall in the range of 500-599. 
        severity:
          type: string
          description: |
            This is a high level description of a fault affecting the service or system
            LOW is meant for faults that have no effect on the system. These are minor oddities that the software keeps track of but do not affect service quality in any way.
            MEDIUM level faults are meant for faults that affect the system's operational performance but do not affect the quality of information provided by a service. If a service is providing trustworthy information at a suboptimal rate, or if only non-critical functions are impeded, then a service is experiencing a MEDIUM level fault
            HIGH level faults affect service quality in some way because of a malfunction of the underlying software or hardware. These faults may resolve themselves over time, but should be associated with a FAULTED state. Services experiencing a HIGH level fault are operating below their performance specifications and are likely putting out bad data that cannot be trusted
            UNKNOWN is a level reserved for when the system cannot determine the source of a fault. This should not be used generally, as other services should treat UNKNOWN faults with the same level of caution as HIGH level faults
          enum:
          - LOW
          - MEDIUM
          - HIGH
          - UNKNOWN  
        
        timeOfDetection:
          type: string
          format: date-time
          description: The timestamp when this fault was first detected. Timestamp format is as specified by RFC 3339 section 5.6. If this field is not provided, it is assumed that the time of receipt of this fault is the time of detection (if it does not match any existing faults from the same system)
          
        timeOfValidity:
          type: string
          format: date-time
          description: The last timestamp when this fault was confirmed to still be active. Timestamp format is as specified by RFC 3339 section 5.6. If this field is not provided, it is assumed that the time of receipt of this fault message is the time of validity (and will try to match to any existing faults being tracked)
          
        faultTimeout: 
          type: integer
          minimum: 1
          example: 100
          description: Seconds within which a fault update is expected from the client. If no update is received, the fault is assumed to be resolved.
        
        reporter:
          type: string
          format: uuid
          description: The unique identifier of the reporter of this fault, if provided.
          
        additionalProperties:
          type: array
          items:
            $ref: '#/components/schemas/ExtraProperty'
      required:
        - name
        - code
        - severity

  securitySchemes:
    SystemWrite:      
      flows:
        clientCredentials:
          tokenUrl: https://well-known/oauth-authorization-server/token
          refreshUrl: https://well-known/oauth-authorization-server/refresh
          scopes:
            fraihmwork.system.write: Client may query for any system, version or state data that the service can provide
      type: oauth2

    FaultWrite:      
      flows:
        clientCredentials:
          tokenUrl: https://well-known/oauth-authorization-server/token
          refreshUrl: https://well-known/oauth-authorization-server/refresh
          scopes:
            fraihmwork.fault.write: Client may query for any detailed fault information that the service can provide
      type: oauth2